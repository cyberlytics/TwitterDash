version: '3.8'
services:
  # Lokale Datenbank - MongoDB
  database:
    container_name: mongo
    image: mongo:latest
    profiles: ["database","database-service","backend","frontend","frontend-dev"]
    volumes:
      - ./images/database/data/MongoDB:/data/db
    ports:
      - '27017:27017'
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - DBNetwork
  
  mongo-express:
    container_name: mongo-express
    image: mongo-express
    profiles: ["database","database-service","backend","frontend-dev"]
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    networks:
      - DBNetwork

  database-service:
    container_name: databaseservice
    image: databaseservice
    profiles: ["database-service","backend","frontend","frontend-dev"]
    build:
      context: images/database/src
      dockerfile: database-service/Dockerfile

    environment:
      MONGODB_PORT: 27017
      MONGODB_IP:  mongo
      MONGODB_USER: root
      MONGODB_PASSWORD: example
      GRPC_PORT: 50051
  
    ports:
        - 50051:50051

    networks:
        - DBNetwork
        - network-backend
        - network-frontend

  conductor-service:
    image: conductor
    container_name: conductor
    profiles: ["conductor","backend","frontend","frontend-dev"]
    build:
      context: images/backend/conductor
      dockerfile: conductor/Dockerfile
    ports:
      - 7777:7777

    environment:
      - TRENDSERVICE_IP=trend-service
      - TRENDSERVICE_PORT=50010
      - DBSERVICE_IP=database-service
      - DBSERVICE_PORT=50051
      - TWINTSERVICE_IP=twint-service
      - TWINTSERVICE_PORT=50150
      - SENTIMENTSERVICE_IP=sentiment-service
      - SENTIMENTSERVICE_PORT=50250

    depends_on:
      - database-service
      - trend-service
      - twint-service
      - sentiment-service

      
    networks:
        - network-backend
        - network-frontend
  
  frontend:
    container_name: twitter-dash-frontend
    profiles: ["frontend"]
    build:
      context: images/webserver
      dockerfile: Dockerfile
    environment:
      - DB_SERVICE_HOSTNAME=database-service
      - DB_SERVICE_PORT=<TO_BE_DETERMINED>
    ports:
      - 3000:3000
    networks:
      - network-frontend
      - DBNetwork

  trend-service:
    container_name: trend-service
    profiles: ["trend-service", "backend","frontend","frontend-dev"]
    build: ./images/backend/trend_service
    restart: unless-stopped
    ports:
      - 50010:50010
    networks:
      - network-backend

  twint-service:
    container_name: twint-service
    profiles: ["twint-service", "backend"]
    build: ./images/backend/twint_scraper
    restart: unless-stopped
    ports:
      - 50011:50011
    networks:
      - network-backend

  sentiment-service:
    container_name: sentiment-service
    profiles: ["sentiment-service", "backend"]
    build: ./images/backend/sentiment_service
    restart: unless-stopped
    ports:
      - 50012:50012
    networks:
      - network-backend

networks:
  network-backend:
    name: backend
    driver: bridge
  network-frontend:
    name: frontend
    driver: bridge
  DBNetwork:
    driver: bridge


  # # Frontend (Node.js)
  # node-frontend:
  #   build: './images/frontend/'
  #   volumes:
  #     - ./images/frontend/:/home/app/
  #     - /home/app/node_modules
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true
  #     - BACKEND_SERVER=node-backend
  #     - BACKEND_PORT=5000
  #   networks:
  #     - network-frontend
  #   depends_on:
  #     - database-service
  
  # python:
  #   container_name: python
  #   build: ./<path>
  #   restart: unless-stopped

  # dotnet:
  #   container_name: dotnet
  #   build: ./<path>
  #   restart: unless-stopped

  # frontend:
  #   container_name: frontend
  #   build: .
  #   restart: unless-stopped
  #   ports:
  #     - "8080:80"

